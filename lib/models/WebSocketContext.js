"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// const heartbeat = () {
//   this.isAlive = true;
// }
class WebSocketContext {
    constructor() { }
    static getInstance() {
        return WebSocketContext._instance;
    }
    getWebsocket() {
        return WebSocketContext._websocket;
    }
    static init(websocket) {
        WebSocketContext._websocket = websocket;
        websocket.on('connection', (ws, req, head) => {
            ws.isAlive = true;
            // ws.on('pong', heartbeat);
            console.log(req.connection.remoteAddress);
            ws.on('open', () => {
                console.log('connected');
            });
            ws.on('close', () => {
                console.log('disconnected');
            });
            ws.on('message', (data) => {
                console.log('message', data);
            });
            ws.on('error', (err) => {
                console.log('error', err);
                throw err;
            });
        });
    }
}
WebSocketContext._instance = new WebSocketContext();
exports.default = WebSocketContext;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV2ViU29ja2V0Q29udGV4dC5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbIm1vZGVscy9XZWJTb2NrZXRDb250ZXh0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEseUJBQXlCO0FBQ3pCLHlCQUF5QjtBQUN6QixJQUFJO0FBRUosTUFBcUIsZ0JBQWdCO0lBT2pDLGdCQUF1QixDQUFDO0lBTGpCLE1BQU0sQ0FBQyxXQUFXO1FBQ3ZCLE9BQU8sZ0JBQWdCLENBQUMsU0FBUyxDQUFDO0lBQ3BDLENBQUM7SUFJTSxZQUFZO1FBQ2pCLE9BQU8sZ0JBQWdCLENBQUMsVUFBVSxDQUFDO0lBQ3JDLENBQUM7SUFDTSxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVM7UUFDMUIsZ0JBQWdCLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQztRQUN4QyxTQUFTLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEVBQUU7WUFDM0MsRUFBRSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7WUFDbEIsNEJBQTRCO1lBQzVCLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsQ0FBQztZQUMxQyxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUU7Z0JBQ2YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUM3QixDQUFDLENBQUMsQ0FBQztZQUNILEVBQUUsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRTtnQkFDaEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQztZQUNoQyxDQUFDLENBQUMsQ0FBQztZQUNILEVBQUUsQ0FBQyxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUU7Z0JBQ3RCLE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ2pDLENBQUMsQ0FBQyxDQUFDO1lBQ0gsRUFBRSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRTtnQkFDbkIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQzFCLE1BQU0sR0FBRyxDQUFDO1lBQ2QsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDLENBQUMsQ0FBQztJQUNILENBQUM7O0FBOUJjLDBCQUFTLEdBQUcsSUFBSSxnQkFBZ0IsRUFBRSxDQUFDO0FBRHRELG1DQXlEQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFdlYlNvY2tldCBmcm9tICd3cyc7XG5cbi8vIGNvbnN0IGhlYXJ0YmVhdCA9ICgpIHtcbi8vICAgdGhpcy5pc0FsaXZlID0gdHJ1ZTtcbi8vIH1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgV2ViU29ja2V0Q29udGV4dCB7XG4gICAgcHJpdmF0ZSBzdGF0aWMgX2luc3RhbmNlID0gbmV3IFdlYlNvY2tldENvbnRleHQoKTtcbiAgICBwdWJsaWMgc3RhdGljIGdldEluc3RhbmNlKCk6IFdlYlNvY2tldENvbnRleHQge1xuICAgICAgcmV0dXJuIFdlYlNvY2tldENvbnRleHQuX2luc3RhbmNlO1xuICAgIH1cbiAgICBwcml2YXRlIHN0YXRpYyBfd2Vic29ja2V0O1xuICAgIHByaXZhdGUgc3RhdGljIGlzQWxpdmU6IGFueTtcbiAgICBwcml2YXRlIGNvbnN0cnVjdG9yKCkge31cbiAgICBwdWJsaWMgZ2V0V2Vic29ja2V0KCk6IFdlYlNvY2tldC5TZXJ2ZXIge1xuICAgICAgcmV0dXJuIFdlYlNvY2tldENvbnRleHQuX3dlYnNvY2tldDtcbiAgICB9XG4gICAgcHVibGljIHN0YXRpYyBpbml0KHdlYnNvY2tldCkge1xuICAgICAgV2ViU29ja2V0Q29udGV4dC5fd2Vic29ja2V0ID0gd2Vic29ja2V0O1xuICAgICAgd2Vic29ja2V0Lm9uKCdjb25uZWN0aW9uJywgKHdzLCByZXEsIGhlYWQpID0+IHtcbiAgICAgICAgd3MuaXNBbGl2ZSA9IHRydWU7XG4gICAgICAgIC8vIHdzLm9uKCdwb25nJywgaGVhcnRiZWF0KTtcbiAgICAgICAgY29uc29sZS5sb2cocmVxLmNvbm5lY3Rpb24ucmVtb3RlQWRkcmVzcyk7XG4gICAgICAgIHdzLm9uKCdvcGVuJywgKCkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2Nvbm5lY3RlZCcpO1xuICAgICAgICB9KTtcbiAgICAgICAgd3Mub24oJ2Nsb3NlJywgKCkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2Rpc2Nvbm5lY3RlZCcpO1xuICAgICAgICB9KTtcbiAgICAgICAgd3Mub24oJ21lc3NhZ2UnLCAoZGF0YSkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ21lc3NhZ2UnLCBkYXRhKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHdzLm9uKCdlcnJvcicsIChlcnIpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvcicsIGVycik7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICAgIH1cbiAgICAvLyBwcml2YXRlIGhlYXJ0YmVhdCgpIHtcbiAgICAvLyAgIHRoaXMuaXNBbGl2ZSA9IHRydWU7XG4gICAgLy8gfVxuICAgIC8vIHB1YmxpYyBzdGF0aWMgaW5pdCh3ZWJzb2NrZXQpIHtcbiAgICAvLyAgIFdlYlNvY2tldENvbnRleHQuX3dlYnNvY2tldCA9IHdlYnNvY2tldDtcbiAgICAvLyAgIHdlYnNvY2tldC5vbignY29ubmVjdGlvbicsICh3cywgcmVxLCBoZWFkKSA9PiB7XG4gICAgLy8gICAgIFdlYlNvY2tldENvbnRleHQuX293cyA9IHdzO1xuICAgIC8vICAgICBXZWJTb2NrZXRDb250ZXh0Ll9yZXEgPSByZXE7XG4gICAgLy8gICAgIFdlYlNvY2tldENvbnRleHQuX2hlYWQgPSBoZWFkO1xuICAgIC8vICAgICBjb25zb2xlLmxvZyhyZXEuY29ubmVjdGlvbi5yZW1vdGVBZGRyZXNzKTtcbiAgICAvLyAgICAgd3Mub24oJ29wZW4nLCAoKSA9PiB7XG4gICAgLy8gICAgICAgICBjb25zb2xlLmxvZygnY29ubmVjdGVkJyk7XG4gICAgLy8gICAgIH0pO1xuICAgIC8vICAgICB3cy5vbignY2xvc2UnLCAoKSA9PiB7XG4gICAgLy8gICAgICAgICBjb25zb2xlLmxvZygnZGlzY29ubmVjdGVkJyk7XG4gICAgLy8gICAgIH0pO1xuICAgIC8vICAgICB3cy5vbignbWVzc2FnZScsIChkYXRhKSA9PiB7XG4gICAgLy8gICAgICAgICBjb25zb2xlLmxvZygnbWVzc2FnZScsIGRhdGEpO1xuICAgIC8vICAgICB9KTtcbiAgICAvLyAgICAgd3Mub24oJ2Vycm9yJywgKGVycikgPT4ge1xuICAgIC8vICAgICAgICAgY29uc29sZS5sb2coJ2Vycm9yJywgZXJyKTtcbiAgICAvLyAgICAgICAgIHRocm93IGVycjtcbiAgICAvLyAgICAgfSk7XG4gICAgLy8gfSk7XG4gICAgLy8gfVxufVxuIl19