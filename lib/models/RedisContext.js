"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const IORedis = require("ioredis");
const log4js = require("koa-log4");
const log = log4js.getLogger('RedisContext');
class RedisContext {
    constructor() { }
    static async initialize(jsonConfig) {
        RedisContext.instance.redis = new IORedis.Cluster(jsonConfig, {
            enableOfflineQueue: false,
            enableReadyCheck: true,
            clusterRetryStrategy: (times) => {
                return Math.min(100 + times * 2, 2000);
            },
            scaleReads: 'all',
            redisOptions: {
                enableOfflineQueue: false,
                dropBufferSupport: true,
                enableReadyCheck: true
            }
        });
        const changePromis = RedisContext.instance.redis;
        changePromis.Promise = global.Promise;
        RedisContext.instance.allAll = RedisContext.instance.redis.nodes('all');
        RedisContext.instance.allSlaves = RedisContext.instance.redis.nodes('slave');
        RedisContext.instance.allMasters = RedisContext.instance.redis.nodes('master');
        log.info(`RedisContext is ready.`);
    }
    static getInstance() {
        return RedisContext.instance;
    }
    getRedis() {
        return RedisContext.instance.redis;
    }
    getAllNode() {
        return RedisContext.instance.allAll;
    }
    getallMasters() {
        return RedisContext.instance.allMasters;
    }
    getallSlaves() {
        return RedisContext.instance.allSlaves;
    }
}
RedisContext.instance = new RedisContext();
exports.default = RedisContext;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVkaXNDb250ZXh0LmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsibW9kZWxzL1JlZGlzQ29udGV4dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1DQUFtQztBQUNuQyxtQ0FBbUM7QUFHbkMsTUFBTSxHQUFHLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUM3QyxNQUFxQixZQUFZO0lBNkI3QixnQkFBd0IsQ0FBQztJQXJCbEIsTUFBTSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsVUFBaUM7UUFDNUQsWUFBWSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEdBQUcsSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRTtZQUMxRCxrQkFBa0IsRUFBRSxLQUFLO1lBQ3pCLGdCQUFnQixFQUFFLElBQUk7WUFDdEIsb0JBQW9CLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRTtnQkFDNUIsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsR0FBRyxLQUFLLEdBQUcsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQzNDLENBQUM7WUFDRCxVQUFVLEVBQUUsS0FBSztZQUNqQixZQUFZLEVBQUU7Z0JBQ1Ysa0JBQWtCLEVBQUUsS0FBSztnQkFDekIsaUJBQWlCLEVBQUUsSUFBSTtnQkFDdkIsZ0JBQWdCLEVBQUUsSUFBSTthQUN6QjtTQUNKLENBQVEsQ0FBQztRQUNWLE1BQU0sWUFBWSxHQUFRLFlBQVksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDO1FBQ3RELFlBQVksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQztRQUN0QyxZQUFZLENBQUMsUUFBUSxDQUFDLE1BQU0sR0FBRyxZQUFZLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDeEUsWUFBWSxDQUFDLFFBQVEsQ0FBQyxTQUFTLEdBQUcsWUFBWSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzdFLFlBQVksQ0FBQyxRQUFRLENBQUMsVUFBVSxHQUFHLFlBQVksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMvRSxHQUFHLENBQUMsSUFBSSxDQUFDLHdCQUF3QixDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUdNLE1BQU0sQ0FBQyxXQUFXO1FBQ3JCLE9BQU8sWUFBWSxDQUFDLFFBQVEsQ0FBQztJQUNqQyxDQUFDO0lBRU0sUUFBUTtRQUNYLE9BQU8sWUFBWSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUM7SUFDdkMsQ0FBQztJQUVNLFVBQVU7UUFDYixPQUFPLFlBQVksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDO0lBQ3hDLENBQUM7SUFFTSxhQUFhO1FBQ2hCLE9BQU8sWUFBWSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUM7SUFDNUMsQ0FBQztJQUVNLFlBQVk7UUFDZixPQUFPLFlBQVksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDO0lBQzNDLENBQUM7O0FBL0NjLHFCQUFRLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztBQUZqRCwrQkFrREMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBJT1JlZGlzIGZyb20gJ2lvcmVkaXMnO1xuaW1wb3J0ICogYXMgbG9nNGpzIGZyb20gJ2tvYS1sb2c0JztcbmltcG9ydCAqIGFzIF8gZnJvbSAnbG9kYXNoJztcblxuY29uc3QgbG9nID0gbG9nNGpzLmdldExvZ2dlcignUmVkaXNDb250ZXh0Jyk7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSZWRpc0NvbnRleHQge1xuXG4gICAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2UgPSBuZXcgUmVkaXNDb250ZXh0KCk7XG4gICAgcHJpdmF0ZSByZWRpczogSU9SZWRpcy5DbHVzdGVyO1xuICAgIHByaXZhdGUgYWxsTWFzdGVyczogSU9SZWRpcy5SZWRpc1tdO1xuICAgIHByaXZhdGUgYWxsU2xhdmVzOiBJT1JlZGlzLlJlZGlzW107XG4gICAgcHJpdmF0ZSBhbGxBbGw6IElPUmVkaXMuUmVkaXNbXTtcblxuICAgIHB1YmxpYyBzdGF0aWMgYXN5bmMgaW5pdGlhbGl6ZShqc29uQ29uZmlnOiBJT1JlZGlzLkNsdXN0ZXJOb2RlW10pIHtcbiAgICAgICAgUmVkaXNDb250ZXh0Lmluc3RhbmNlLnJlZGlzID0gbmV3IElPUmVkaXMuQ2x1c3Rlcihqc29uQ29uZmlnLCB7XG4gICAgICAgICAgICBlbmFibGVPZmZsaW5lUXVldWU6IGZhbHNlLFxuICAgICAgICAgICAgZW5hYmxlUmVhZHlDaGVjazogdHJ1ZSxcbiAgICAgICAgICAgIGNsdXN0ZXJSZXRyeVN0cmF0ZWd5OiAodGltZXMpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gTWF0aC5taW4oMTAwICsgdGltZXMgKiAyLCAyMDAwKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzY2FsZVJlYWRzOiAnYWxsJyxcbiAgICAgICAgICAgIHJlZGlzT3B0aW9uczoge1xuICAgICAgICAgICAgICAgIGVuYWJsZU9mZmxpbmVRdWV1ZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgZHJvcEJ1ZmZlclN1cHBvcnQ6IHRydWUsXG4gICAgICAgICAgICAgICAgZW5hYmxlUmVhZHlDaGVjazogdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICB9KSBhcyBhbnk7XG4gICAgICAgIGNvbnN0IGNoYW5nZVByb21pczogYW55ID0gUmVkaXNDb250ZXh0Lmluc3RhbmNlLnJlZGlzO1xuICAgICAgICBjaGFuZ2VQcm9taXMuUHJvbWlzZSA9IGdsb2JhbC5Qcm9taXNlO1xuICAgICAgICBSZWRpc0NvbnRleHQuaW5zdGFuY2UuYWxsQWxsID0gUmVkaXNDb250ZXh0Lmluc3RhbmNlLnJlZGlzLm5vZGVzKCdhbGwnKTtcbiAgICAgICAgUmVkaXNDb250ZXh0Lmluc3RhbmNlLmFsbFNsYXZlcyA9IFJlZGlzQ29udGV4dC5pbnN0YW5jZS5yZWRpcy5ub2Rlcygnc2xhdmUnKTtcbiAgICAgICAgUmVkaXNDb250ZXh0Lmluc3RhbmNlLmFsbE1hc3RlcnMgPSBSZWRpc0NvbnRleHQuaW5zdGFuY2UucmVkaXMubm9kZXMoJ21hc3RlcicpO1xuICAgICAgICBsb2cuaW5mbyhgUmVkaXNDb250ZXh0IGlzIHJlYWR5LmApO1xuICAgIH1cbiAgICBwcml2YXRlIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGdldEluc3RhbmNlKCk6IFJlZGlzQ29udGV4dCB7XG4gICAgICAgIHJldHVybiBSZWRpc0NvbnRleHQuaW5zdGFuY2U7XG4gICAgfVxuXG4gICAgcHVibGljIGdldFJlZGlzKCk6IElPUmVkaXMuQ2x1c3RlciB7XG4gICAgICAgIHJldHVybiBSZWRpc0NvbnRleHQuaW5zdGFuY2UucmVkaXM7XG4gICAgfVxuXG4gICAgcHVibGljIGdldEFsbE5vZGUoKTogSU9SZWRpcy5SZWRpc1tdIHtcbiAgICAgICAgcmV0dXJuIFJlZGlzQ29udGV4dC5pbnN0YW5jZS5hbGxBbGw7XG4gICAgfVxuXG4gICAgcHVibGljIGdldGFsbE1hc3RlcnMoKTogSU9SZWRpcy5SZWRpc1tdIHtcbiAgICAgICAgcmV0dXJuIFJlZGlzQ29udGV4dC5pbnN0YW5jZS5hbGxNYXN0ZXJzO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRhbGxTbGF2ZXMoKTogSU9SZWRpcy5SZWRpc1tdIHtcbiAgICAgICAgcmV0dXJuIFJlZGlzQ29udGV4dC5pbnN0YW5jZS5hbGxTbGF2ZXM7XG4gICAgfVxufVxuIl19