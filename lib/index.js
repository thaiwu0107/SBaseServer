"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const clusterws_1 = require("clusterws");
exports.WSServer = clusterws_1.default;
const inversify_binding_decorators_1 = require("inversify-binding-decorators");
exports.buildProviderModule = inversify_binding_decorators_1.buildProviderModule;
const inversify_koa_utils_1 = require("inversify-koa-utils");
exports.all = inversify_koa_utils_1.all;
exports.controller = inversify_koa_utils_1.controller;
exports.cookies = inversify_koa_utils_1.cookies;
exports.httpDelete = inversify_koa_utils_1.httpDelete;
exports.httpGet = inversify_koa_utils_1.httpGet;
exports.httpHead = inversify_koa_utils_1.httpHead;
exports.httpMethod = inversify_koa_utils_1.httpMethod;
exports.httpPatch = inversify_koa_utils_1.httpPatch;
exports.httpPost = inversify_koa_utils_1.httpPost;
exports.httpPut = inversify_koa_utils_1.httpPut;
exports.InversifyKoaServer = inversify_koa_utils_1.InversifyKoaServer;
exports.next = inversify_koa_utils_1.next;
exports.queryParam = inversify_koa_utils_1.queryParam;
exports.request = inversify_koa_utils_1.request;
exports.requestBody = inversify_koa_utils_1.requestBody;
exports.requestHeaders = inversify_koa_utils_1.requestHeaders;
exports.requestParam = inversify_koa_utils_1.requestParam;
exports.response = inversify_koa_utils_1.response;
exports.TYPE = inversify_koa_utils_1.TYPE;
const bodyParser = require("koa-bodyparser");
exports.bodyParser = bodyParser;
const jwt = require("koa-jwt");
exports.jwt = jwt;
const log4js = require("koa-log4");
exports.log4js = log4js;
const koa_req_validator_1 = require("koa-req-validator");
exports.validate = koa_req_validator_1.default;
const Router = require("koa-router");
exports.Router = Router;
const cors = require("koa2-cors");
exports.cors = cors;
const BaseConstant_1 = require("./config/BaseConstant");
exports.BaseConstant = BaseConstant_1.BaseConstant;
const BaseHttpStatusCode_1 = require("./config/BaseHttpStatusCode");
exports.BaseHttpStatusCode = BaseHttpStatusCode_1.BaseHttpStatusCode;
const enum_SQLServerType_1 = require("./config/enum.SQLServerType");
exports.SQLServerType = enum_SQLServerType_1.SQLServerType;
const GServer_1 = require("./GServer");
exports.GServer = GServer_1.default;
const ioc_1 = require("./ioc/ioc");
exports.autoProvide = ioc_1.autoProvide;
exports.container = ioc_1.container;
exports.inject = ioc_1.inject;
exports.provide = ioc_1.provide;
exports.provideNamed = ioc_1.provideNamed;
const iocTracer_1 = require("./ioc/iocTracer");
exports.IocTracer = iocTracer_1.default;
const AnyEntity_1 = require("./models/AnyEntity");
exports.AnyEntity = AnyEntity_1.default;
const BaseController_1 = require("./models/BaseController");
exports.BaseController = BaseController_1.default;
const BaseEntity_1 = require("./models/BaseEntity");
exports.BaseEntity = BaseEntity_1.default;
const BaseExceptions_1 = require("./models/BaseExceptions");
exports.BaseExceptions = BaseExceptions_1.default;
const BaseRepository_1 = require("./models/BaseRepository");
exports.BaseRepository = BaseRepository_1.default;
const BaseResponse_1 = require("./models/BaseResponse");
exports.BaseResponse = BaseResponse_1.default;
const BaseService_1 = require("./models/BaseService");
exports.BaseService = BaseService_1.default;
const BaseSocketController_1 = require("./models/BaseSocketController");
exports.BaseSocketController = BaseSocketController_1.default;
const BaseUserInfo_1 = require("./models/BaseUserInfo");
exports.BaseUserInfo = BaseUserInfo_1.default;
const Decorators_1 = require("./models/Decorators");
exports.Entity = Decorators_1.Entity;
const DocChanged_1 = require("./models/DocChanged");
exports.DocChanged = DocChanged_1.default;
const HttpInitSetting_1 = require("./models/HttpInitSetting");
exports.HttpInitSetting = HttpInitSetting_1.default;
const LibsExceptions_1 = require("./models/LibsExceptions");
exports.LibsExceptions = LibsExceptions_1.LibsExceptions;
const MySqlContext_1 = require("./models/MySqlContext");
exports.MysqlContext = MySqlContext_1.default;
const NotImplemented_1 = require("./models/NotImplemented");
exports.NotImplemented = NotImplemented_1.default;
const SocketInitSetting_1 = require("./models/SocketInitSetting");
exports.SocketInitSetting = SocketInitSetting_1.default;
const Transaction_1 = require("./models/Transaction");
exports.Transaction = Transaction_1.default;
const SServer_1 = require("./SServer");
exports.SServer = SServer_1.default;
const BaseDataHelper_1 = require("./utils/BaseDataHelper");
exports.BaseDataHelper = BaseDataHelper_1.default;
const BaseSQLHelper_1 = require("./utils/BaseSQLHelper");
exports.BaseSQLHelper = BaseSQLHelper_1.default;
const BaseUtils_1 = require("./utils/BaseUtils");
exports.BaseUtils = BaseUtils_1.default;
const WSServer_1 = require("./WSServer");
exports.Init = WSServer_1.Init;
exports.Worker = WSServer_1.Worker;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHlDQUFrQztBQTBEakIsbUJBMURWLG1CQUFTLENBMERTO0FBekR6QiwrRUFBbUU7QUFzRC9ELDhCQXRESyxrREFBbUIsQ0FzREw7QUFyRHZCLDZEQUs2QjtBQThGekIsY0FsR0EseUJBQUcsQ0FrR0E7QUFUSCxxQkF4RkEsZ0NBQVUsQ0F3RkE7QUFpQlYsa0JBekdZLDZCQUFPLENBeUdaO0FBUFAscUJBbEdxQixnQ0FBVSxDQWtHckI7QUFMVixrQkE3RmlDLDZCQUFPLENBNkZqQztBQUdQLG1CQWhHMEMsOEJBQVEsQ0FnRzFDO0FBRlIscUJBOUZvRCxnQ0FBVSxDQThGcEQ7QUFDVixvQkEvRmdFLCtCQUFTLENBK0ZoRTtBQU5ULG1CQXpGMkUsOEJBQVEsQ0F5RjNFO0FBQ1Isa0JBMUZxRiw2QkFBTyxDQTBGckY7QUF4Q1AsNkJBakRBLHdDQUFrQixDQWlEQTtBQXdEbEIsZUF6R29CLDBCQUFJLENBeUdwQjtBQUpKLHFCQXJHMEIsZ0NBQVUsQ0FxRzFCO0FBSFYsa0JBbEdzQyw2QkFBTyxDQWtHdEM7QUFJUCxzQkF0RytDLGlDQUFXLENBc0cvQztBQUNYLHlCQXRHQSxvQ0FBYyxDQXNHQTtBQUhkLHVCQW5HZ0Isa0NBQVksQ0FtR2hCO0FBRFosbUJBbEc4Qiw4QkFBUSxDQWtHOUI7QUFUUixlQXpGd0MsMEJBQUksQ0F5RnhDO0FBdkZSLDZDQUE2QztBQTZDekMsZ0NBQVU7QUE1Q2QsK0JBQStCO0FBMkMzQixrQkFBRztBQTFDUCxtQ0FBbUM7QUF5Qy9CLHdCQUFNO0FBeENWLHlEQUF5QztBQXFGckMsbUJBckZHLDJCQUFRLENBcUZIO0FBcEZaLHFDQUFxQztBQXNDakMsd0JBQU07QUFyQ1Ysa0NBQWtDO0FBb0M5QixvQkFBSTtBQW5DUix3REFBcUQ7QUFxRWpELHVCQXJFSywyQkFBWSxDQXFFTDtBQXBFaEIsb0VBQWlFO0FBbUU3RCw2QkFuRUssdUNBQWtCLENBbUVMO0FBbEV0QixvRUFBNEQ7QUFvRXhELHdCQXBFSyxrQ0FBYSxDQW9FTDtBQW5FakIsdUNBQWdDO0FBNEM1QixrQkE1Q0csaUJBQU8sQ0E0Q0g7QUEzQ1gsbUNBQWtGO0FBc0U5RSxzQkF0RUssaUJBQVcsQ0FzRUw7QUFEWCxvQkFyRWtCLGVBQVMsQ0FxRWxCO0FBSVQsaUJBekU2QixZQUFNLENBeUU3QjtBQUZOLGtCQXZFcUMsYUFBTyxDQXVFckM7QUFDUCx1QkF4RThDLGtCQUFZLENBd0U5QztBQXZFaEIsK0NBQXdDO0FBNkJwQyxvQkE3QkcsbUJBQVMsQ0E2Qkg7QUEzQmIsa0RBQTJDO0FBNER2QyxvQkE1REcsbUJBQVMsQ0E0REg7QUEzRGIsNERBQXFEO0FBd0RqRCx5QkF4REcsd0JBQWMsQ0F3REg7QUF2RGxCLG9EQUE2QztBQXNEekMscUJBdERHLG9CQUFVLENBc0RIO0FBckRkLDREQUFxRDtBQW9EakQseUJBcERHLHdCQUFjLENBb0RIO0FBbkRsQiw0REFBcUQ7QUFrRGpELHlCQWxERyx3QkFBYyxDQWtESDtBQWpEbEIsd0RBQWlEO0FBOEM3Qyx1QkE5Q0csc0JBQVksQ0E4Q0g7QUE3Q2hCLHNEQUErQztBQStDM0Msc0JBL0NHLHFCQUFXLENBK0NIO0FBOUNmLHdFQUFpRTtBQStCN0QsK0JBL0JHLDhCQUFvQixDQStCSDtBQTlCeEIsd0RBQWlEO0FBNEM3Qyx1QkE1Q0csc0JBQVksQ0E0Q0g7QUEzQ2hCLG9EQUEyQztBQWtEdkMsaUJBbERJLG1CQUFNLENBa0RKO0FBakRWLG9EQUE2QztBQWdEekMscUJBaERHLG9CQUFVLENBZ0RIO0FBL0NkLDhEQUF1RDtBQWdDbkQsMEJBaENHLHlCQUFlLENBZ0NIO0FBOUJuQiw0REFBeUQ7QUFvQ3JELHlCQXBDSywrQkFBYyxDQW9DTDtBQW5DbEIsd0RBQWlEO0FBb0M3Qyx1QkFwQ0csc0JBQVksQ0FvQ0g7QUFuQ2hCLDREQUFxRDtBQWlDakQseUJBakNHLHdCQUFjLENBaUNIO0FBaENsQixrRUFBMkQ7QUF5QnZELDRCQXpCRywyQkFBaUIsQ0F5Qkg7QUF4QnJCLHNEQUErQztBQThCM0Msc0JBOUJHLHFCQUFXLENBOEJIO0FBNUJmLHVDQUFnQztBQXVCNUIsa0JBdkJHLGlCQUFPLENBdUJIO0FBdEJYLDJEQUFvRDtBQTBCaEQseUJBMUJHLHdCQUFjLENBMEJIO0FBekJsQix5REFBa0Q7QUF3QjlDLHdCQXhCRyx1QkFBYSxDQXdCSDtBQXZCakIsaURBQTBDO0FBc0J0QyxvQkF0QkcsbUJBQVMsQ0FzQkg7QUFwQmIseUNBQTBDO0FBWXRDLGVBWkssZUFBSSxDQVlMO0FBREosaUJBWFcsaUJBQU0sQ0FXWCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDbHVzdGVyV1MgZnJvbSAnY2x1c3RlcndzJztcbmltcG9ydCB7IGJ1aWxkUHJvdmlkZXJNb2R1bGUgfSBmcm9tICdpbnZlcnNpZnktYmluZGluZy1kZWNvcmF0b3JzJztcbmltcG9ydCB7XG4gICAgYWxsLFxuICAgIGNvbnRyb2xsZXIsIGNvb2tpZXMsIGh0dHBEZWxldGUsIGh0dHBHZXQsIGh0dHBIZWFkLCBodHRwTWV0aG9kLCBodHRwUGF0Y2gsIGh0dHBQb3N0LCBodHRwUHV0LFxuICAgIEludmVyc2lmeUtvYVNlcnZlciwgbmV4dCwgcXVlcnlQYXJhbSwgcmVxdWVzdCwgcmVxdWVzdEJvZHksXG4gICAgcmVxdWVzdEhlYWRlcnMsIHJlcXVlc3RQYXJhbSwgcmVzcG9uc2UsIFRZUEVcbn0gZnJvbSAnaW52ZXJzaWZ5LWtvYS11dGlscyc7XG5pbXBvcnQgKiBhcyBib2R5UGFyc2VyIGZyb20gJ2tvYS1ib2R5cGFyc2VyJztcbmltcG9ydCAqIGFzIGp3dCBmcm9tICdrb2Etand0JztcbmltcG9ydCAqIGFzIGxvZzRqcyBmcm9tICdrb2EtbG9nNCc7XG5pbXBvcnQgdmFsaWRhdGUgZnJvbSAna29hLXJlcS12YWxpZGF0b3InO1xuaW1wb3J0ICogYXMgUm91dGVyIGZyb20gJ2tvYS1yb3V0ZXInO1xuaW1wb3J0ICogYXMgY29ycyBmcm9tICdrb2EyLWNvcnMnO1xuaW1wb3J0IHsgQmFzZUNvbnN0YW50IH0gZnJvbSAnLi9jb25maWcvQmFzZUNvbnN0YW50JztcbmltcG9ydCB7IEJhc2VIdHRwU3RhdHVzQ29kZSB9IGZyb20gJy4vY29uZmlnL0Jhc2VIdHRwU3RhdHVzQ29kZSc7XG5pbXBvcnQgeyBTUUxTZXJ2ZXJUeXBlIH0gZnJvbSAnLi9jb25maWcvZW51bS5TUUxTZXJ2ZXJUeXBlJztcbmltcG9ydCBHU2VydmVyIGZyb20gJy4vR1NlcnZlcic7XG5pbXBvcnQgeyBhdXRvUHJvdmlkZSwgY29udGFpbmVyLCBpbmplY3QsIHByb3ZpZGUsIHByb3ZpZGVOYW1lZCB9IGZyb20gJy4vaW9jL2lvYyc7XG5pbXBvcnQgSW9jVHJhY2VyIGZyb20gJy4vaW9jL2lvY1RyYWNlcic7XG5pbXBvcnQgeyBPUk1Db250ZXh0IH0gZnJvbSAnLi9tb2RlbHMnO1xuaW1wb3J0IEFueUVudGl0eSBmcm9tICcuL21vZGVscy9BbnlFbnRpdHknO1xuaW1wb3J0IEJhc2VDb250cm9sbGVyIGZyb20gJy4vbW9kZWxzL0Jhc2VDb250cm9sbGVyJztcbmltcG9ydCBCYXNlRW50aXR5IGZyb20gJy4vbW9kZWxzL0Jhc2VFbnRpdHknO1xuaW1wb3J0IEJhc2VFeGNlcHRpb25zIGZyb20gJy4vbW9kZWxzL0Jhc2VFeGNlcHRpb25zJztcbmltcG9ydCBCYXNlUmVwb3NpdG9yeSBmcm9tICcuL21vZGVscy9CYXNlUmVwb3NpdG9yeSc7XG5pbXBvcnQgQmFzZVJlc3BvbnNlIGZyb20gJy4vbW9kZWxzL0Jhc2VSZXNwb25zZSc7XG5pbXBvcnQgQmFzZVNlcnZpY2UgZnJvbSAnLi9tb2RlbHMvQmFzZVNlcnZpY2UnO1xuaW1wb3J0IEJhc2VTb2NrZXRDb250cm9sbGVyIGZyb20gJy4vbW9kZWxzL0Jhc2VTb2NrZXRDb250cm9sbGVyJztcbmltcG9ydCBCYXNlVXNlckluZm8gZnJvbSAnLi9tb2RlbHMvQmFzZVVzZXJJbmZvJztcbmltcG9ydCB7RW50aXR5fSBmcm9tICcuL21vZGVscy9EZWNvcmF0b3JzJztcbmltcG9ydCBEb2NDaGFuZ2VkIGZyb20gJy4vbW9kZWxzL0RvY0NoYW5nZWQnO1xuaW1wb3J0IEh0dHBJbml0U2V0dGluZyBmcm9tICcuL21vZGVscy9IdHRwSW5pdFNldHRpbmcnO1xuaW1wb3J0IElCYXNlQ29udGV4dCBmcm9tICcuL21vZGVscy9JQmFzZUNvbnRleHQnO1xuaW1wb3J0IHsgTGlic0V4Y2VwdGlvbnMgfSBmcm9tICcuL21vZGVscy9MaWJzRXhjZXB0aW9ucyc7XG5pbXBvcnQgTXlzcWxDb250ZXh0IGZyb20gJy4vbW9kZWxzL015U3FsQ29udGV4dCc7XG5pbXBvcnQgTm90SW1wbGVtZW50ZWQgZnJvbSAnLi9tb2RlbHMvTm90SW1wbGVtZW50ZWQnO1xuaW1wb3J0IFNvY2tldEluaXRTZXR0aW5nIGZyb20gJy4vbW9kZWxzL1NvY2tldEluaXRTZXR0aW5nJztcbmltcG9ydCBUcmFuc2FjdGlvbiBmcm9tICcuL21vZGVscy9UcmFuc2FjdGlvbic7XG5pbXBvcnQgSVNlcnZlckluaXRPbmNlRXZlbnQgZnJvbSAnLi9TZXJ2ZXJFdmVudC9TZXJ2ZXJJbml0T25jZUV2ZW50JztcbmltcG9ydCBTU2VydmVyIGZyb20gJy4vU1NlcnZlcic7XG5pbXBvcnQgQmFzZURhdGFIZWxwZXIgZnJvbSAnLi91dGlscy9CYXNlRGF0YUhlbHBlcic7XG5pbXBvcnQgQmFzZVNRTEhlbHBlciBmcm9tICcuL3V0aWxzL0Jhc2VTUUxIZWxwZXInO1xuaW1wb3J0IEJhc2VVdGlscyBmcm9tICcuL3V0aWxzL0Jhc2VVdGlscyc7XG5pbXBvcnQgeyBJUXVlcnlPcHRpb25zIH0gZnJvbSAnLi91dGlscy9EYW9PcGVyYXRvcic7XG5pbXBvcnQgeyBJbml0LCBXb3JrZXIgfSBmcm9tICcuL1dTU2VydmVyJztcblxuZXhwb3J0IHtcbiAgICBJb2NUcmFjZXIsXG4gICAgY29ycyxcbiAgICBSb3V0ZXIsXG4gICAgbG9nNGpzLFxuICAgIGp3dCxcbiAgICBib2R5UGFyc2VyLFxuICAgIEludmVyc2lmeUtvYVNlcnZlcixcbiAgICBidWlsZFByb3ZpZGVyTW9kdWxlLFxuICAgIFdvcmtlcixcbiAgICBJbml0LFxuICAgIENsdXN0ZXJXUyBhcyBXU1NlcnZlcixcbiAgICBCYXNlU29ja2V0Q29udHJvbGxlcixcbiAgICBJU2VydmVySW5pdE9uY2VFdmVudCxcbiAgICBHU2VydmVyLFxuICAgIFNvY2tldEluaXRTZXR0aW5nLFxuICAgIFNTZXJ2ZXIsXG4gICAgSHR0cEluaXRTZXR0aW5nLFxuICAgIEJhc2VVdGlscyxcbiAgICBCYXNlU1FMSGVscGVyLFxuICAgIEJhc2VEYXRhSGVscGVyLFxuICAgIFRyYW5zYWN0aW9uLFxuICAgIE5vdEltcGxlbWVudGVkLFxuICAgIExpYnNFeGNlcHRpb25zLFxuICAgIE15c3FsQ29udGV4dCxcbiAgICBCYXNlUmVzcG9uc2UsXG4gICAgQmFzZVVzZXJJbmZvLFxuICAgIEJhc2VTZXJ2aWNlLFxuICAgIEJhc2VSZXBvc2l0b3J5LFxuICAgIEJhc2VFeGNlcHRpb25zLFxuICAgIEJhc2VFbnRpdHksXG4gICAgQmFzZUNvbnRyb2xsZXIsXG4gICAgRG9jQ2hhbmdlZCxcbiAgICBFbnRpdHksXG4gICAgQW55RW50aXR5LFxuICAgIEJhc2VIdHRwU3RhdHVzQ29kZSxcbiAgICBCYXNlQ29uc3RhbnQsXG4gICAgU1FMU2VydmVyVHlwZSxcbiAgICBJQmFzZUNvbnRleHQsXG4gICAgSVF1ZXJ5T3B0aW9ucyxcbiAgICBjb250YWluZXIsXG4gICAgYXV0b1Byb3ZpZGUsXG4gICAgcHJvdmlkZSxcbiAgICBwcm92aWRlTmFtZWQsXG4gICAgaW5qZWN0LFxuICAgIGNvbnRyb2xsZXIsXG4gICAgaHR0cFBvc3QsXG4gICAgaHR0cFB1dCxcbiAgICBUWVBFLFxuICAgIHZhbGlkYXRlLFxuICAgIGh0dHBHZXQsXG4gICAgaHR0cE1ldGhvZCxcbiAgICBodHRwUGF0Y2gsXG4gICAgaHR0cEhlYWQsXG4gICAgYWxsLFxuICAgIGh0dHBEZWxldGUsXG4gICAgcmVxdWVzdCxcbiAgICByZXNwb25zZSxcbiAgICByZXF1ZXN0UGFyYW0sXG4gICAgcXVlcnlQYXJhbSxcbiAgICByZXF1ZXN0Qm9keSxcbiAgICByZXF1ZXN0SGVhZGVycyxcbiAgICBjb29raWVzLFxuICAgIG5leHRcbn07XG4iXX0=