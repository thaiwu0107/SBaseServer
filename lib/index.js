"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const clusterws_1 = require("clusterws");
exports.WSServer = clusterws_1.default;
const inversify_koa_utils_1 = require("inversify-koa-utils");
exports.all = inversify_koa_utils_1.all;
exports.controller = inversify_koa_utils_1.controller;
exports.cookies = inversify_koa_utils_1.cookies;
exports.httpDelete = inversify_koa_utils_1.httpDelete;
exports.httpGet = inversify_koa_utils_1.httpGet;
exports.httpHead = inversify_koa_utils_1.httpHead;
exports.httpMethod = inversify_koa_utils_1.httpMethod;
exports.httpPatch = inversify_koa_utils_1.httpPatch;
exports.httpPost = inversify_koa_utils_1.httpPost;
exports.httpPut = inversify_koa_utils_1.httpPut;
exports.next = inversify_koa_utils_1.next;
exports.queryParam = inversify_koa_utils_1.queryParam;
exports.request = inversify_koa_utils_1.request;
exports.requestBody = inversify_koa_utils_1.requestBody;
exports.requestHeaders = inversify_koa_utils_1.requestHeaders;
exports.requestParam = inversify_koa_utils_1.requestParam;
exports.response = inversify_koa_utils_1.response;
exports.TYPE = inversify_koa_utils_1.TYPE;
const koa_req_validator_1 = require("koa-req-validator");
exports.validate = koa_req_validator_1.default;
const BaseConstant_1 = require("./config/BaseConstant");
exports.BaseConstant = BaseConstant_1.BaseConstant;
const BaseHttpStatusCode_1 = require("./config/BaseHttpStatusCode");
exports.BaseHttpStatusCode = BaseHttpStatusCode_1.BaseHttpStatusCode;
const enum_SQLServerType_1 = require("./config/enum.SQLServerType");
exports.SQLServerType = enum_SQLServerType_1.SQLServerType;
const GServer_1 = require("./GServer");
exports.GServer = GServer_1.default;
const ioc_1 = require("./ioc/ioc");
exports.autoProvide = ioc_1.autoProvide;
exports.container = ioc_1.container;
exports.inject = ioc_1.inject;
exports.provide = ioc_1.provide;
exports.provideNamed = ioc_1.provideNamed;
const WebSocketManager_1 = require("./microServices/WebSocketManager");
exports.WebSocketManager = WebSocketManager_1.default;
const models_1 = require("./models");
exports.ORMContext = models_1.ORMContext;
const AnyEntity_1 = require("./models/AnyEntity");
exports.AnyEntity = AnyEntity_1.default;
const BaseController_1 = require("./models/BaseController");
exports.BaseController = BaseController_1.default;
const BaseEntity_1 = require("./models/BaseEntity");
exports.BaseEntity = BaseEntity_1.default;
const BaseExceptions_1 = require("./models/BaseExceptions");
exports.BaseExceptions = BaseExceptions_1.default;
const BaseRepository_1 = require("./models/BaseRepository");
exports.BaseRepository = BaseRepository_1.default;
const BaseResponse_1 = require("./models/BaseResponse");
exports.BaseResponse = BaseResponse_1.default;
const BaseService_1 = require("./models/BaseService");
exports.BaseService = BaseService_1.default;
const BaseSocketController_1 = require("./models/BaseSocketController");
exports.BaseSocketController = BaseSocketController_1.default;
const BaseUserInfo_1 = require("./models/BaseUserInfo");
exports.BaseUserInfo = BaseUserInfo_1.default;
const Decorators_1 = require("./models/Decorators");
exports.Entity = Decorators_1.default;
const DocChanged_1 = require("./models/DocChanged");
exports.DocChanged = DocChanged_1.default;
const HttpInitSetting_1 = require("./models/HttpInitSetting");
exports.HttpInitSetting = HttpInitSetting_1.default;
const LibsExceptions_1 = require("./models/LibsExceptions");
exports.LibsExceptions = LibsExceptions_1.LibsExceptions;
const NotImplemented_1 = require("./models/NotImplemented");
exports.NotImplemented = NotImplemented_1.default;
const SocketInitSetting_1 = require("./models/SocketInitSetting");
exports.SocketInitSetting = SocketInitSetting_1.default;
const Transaction_1 = require("./models/Transaction");
exports.Transaction = Transaction_1.default;
const SServer_1 = require("./SServer");
exports.SServer = SServer_1.default;
const BaseDataHelper_1 = require("./utils/BaseDataHelper");
exports.BaseDataHelper = BaseDataHelper_1.default;
const BaseSQLHelper_1 = require("./utils/BaseSQLHelper");
exports.BaseSQLHelper = BaseSQLHelper_1.default;
const BaseUtils_1 = require("./utils/BaseUtils");
exports.BaseUtils = BaseUtils_1.default;
const WSServer_1 = require("./WSServer");
exports.Init = WSServer_1.Init;
exports.Worker = WSServer_1.Worker;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHlDQUFrQztBQTBDakIsbUJBMUNWLG1CQUFTLENBMENTO0FBekN6Qiw2REFJNkI7QUFpRnpCLGNBcEZBLHlCQUFHLENBb0ZBO0FBVEgscUJBM0VLLGdDQUFVLENBMkVMO0FBaUJWLGtCQTVGaUIsNkJBQU8sQ0E0RmpCO0FBUFAscUJBckYwQixnQ0FBVSxDQXFGMUI7QUFMVixrQkFoRnNDLDZCQUFPLENBZ0Z0QztBQUdQLG1CQW5GK0MsOEJBQVEsQ0FtRi9DO0FBRlIscUJBakZ5RCxnQ0FBVSxDQWlGekQ7QUFDVixvQkFsRnFFLCtCQUFTLENBa0ZyRTtBQU5ULG1CQTVFZ0YsOEJBQVEsQ0E0RWhGO0FBQ1Isa0JBNUVBLDZCQUFPLENBNEVBO0FBZ0JQLGVBNUZTLDBCQUFJLENBNEZUO0FBSkoscUJBeEZlLGdDQUFVLENBd0ZmO0FBSFYsa0JBckYyQiw2QkFBTyxDQXFGM0I7QUFJUCxzQkF6Rm9DLGlDQUFXLENBeUZwQztBQUNYLHlCQXpGQSxvQ0FBYyxDQXlGQTtBQUhkLHVCQXRGZ0Isa0NBQVksQ0FzRmhCO0FBRFosbUJBckY4Qiw4QkFBUSxDQXFGOUI7QUFUUixlQTVFd0MsMEJBQUksQ0E0RXhDO0FBMUVSLHlEQUF5QztBQTJFckMsbUJBM0VHLDJCQUFRLENBMkVIO0FBMUVaLHdEQUFxRDtBQTZEakQsdUJBN0RLLDJCQUFZLENBNkRMO0FBNURoQixvRUFBaUU7QUEyRDdELDZCQTNESyx1Q0FBa0IsQ0EyREw7QUExRHRCLG9FQUE0RDtBQTREeEQsd0JBNURLLGtDQUFhLENBNERMO0FBM0RqQix1Q0FBZ0M7QUFvQzVCLGtCQXBDRyxpQkFBTyxDQW9DSDtBQW5DWCxtQ0FBa0Y7QUE4RDlFLHNCQTlESyxpQkFBVyxDQThETDtBQURYLG9CQTdEa0IsZUFBUyxDQTZEbEI7QUFJVCxpQkFqRTZCLFlBQU0sQ0FpRTdCO0FBRk4sa0JBL0RxQyxhQUFPLENBK0RyQztBQUNQLHVCQWhFOEMsa0JBQVksQ0FnRTlDO0FBL0RoQix1RUFBZ0U7QUFnQzVELDJCQWhDRywwQkFBZ0IsQ0FnQ0g7QUEvQnBCLHFDQUFzQztBQTJDbEMscUJBM0NLLG1CQUFVLENBMkNMO0FBMUNkLGtEQUEyQztBQW9EdkMsb0JBcERHLG1CQUFTLENBb0RIO0FBbkRiLDREQUFxRDtBQWdEakQseUJBaERHLHdCQUFjLENBZ0RIO0FBL0NsQixvREFBNkM7QUE4Q3pDLHFCQTlDRyxvQkFBVSxDQThDSDtBQTdDZCw0REFBcUQ7QUE0Q2pELHlCQTVDRyx3QkFBYyxDQTRDSDtBQTNDbEIsNERBQXFEO0FBMENqRCx5QkExQ0csd0JBQWMsQ0EwQ0g7QUF6Q2xCLHdEQUFpRDtBQXNDN0MsdUJBdENHLHNCQUFZLENBc0NIO0FBckNoQixzREFBK0M7QUF1QzNDLHNCQXZDRyxxQkFBVyxDQXVDSDtBQXRDZix3RUFBaUU7QUFzQjdELCtCQXRCRyw4QkFBb0IsQ0FzQkg7QUFyQnhCLHdEQUFpRDtBQW9DN0MsdUJBcENHLHNCQUFZLENBb0NIO0FBbkNoQixvREFBeUM7QUEwQ3JDLGlCQTFDRyxvQkFBTSxDQTBDSDtBQXpDVixvREFBNkM7QUF3Q3pDLHFCQXhDRyxvQkFBVSxDQXdDSDtBQXZDZCw4REFBdUQ7QUF3Qm5ELDBCQXhCRyx5QkFBZSxDQXdCSDtBQXRCbkIsNERBQXlEO0FBNEJyRCx5QkE1QkssK0JBQWMsQ0E0Qkw7QUEzQmxCLDREQUFxRDtBQTBCakQseUJBMUJHLHdCQUFjLENBMEJIO0FBekJsQixrRUFBMkQ7QUFrQnZELDRCQWxCRywyQkFBaUIsQ0FrQkg7QUFqQnJCLHNEQUErQztBQXVCM0Msc0JBdkJHLHFCQUFXLENBdUJIO0FBckJmLHVDQUFnQztBQWdCNUIsa0JBaEJHLGlCQUFPLENBZ0JIO0FBZlgsMkRBQW9EO0FBbUJoRCx5QkFuQkcsd0JBQWMsQ0FtQkg7QUFsQmxCLHlEQUFrRDtBQWlCOUMsd0JBakJHLHVCQUFhLENBaUJIO0FBaEJqQixpREFBMEM7QUFldEMsb0JBZkcsbUJBQVMsQ0FlSDtBQWJiLHlDQUEwQztBQUl0QyxlQUpLLGVBQUksQ0FJTDtBQURKLGlCQUhXLGlCQUFNLENBR1giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2x1c3RlcldTIGZyb20gJ2NsdXN0ZXJ3cyc7XG5pbXBvcnQge1xuICAgIGFsbCwgY29udHJvbGxlciwgY29va2llcywgaHR0cERlbGV0ZSwgaHR0cEdldCwgaHR0cEhlYWQsIGh0dHBNZXRob2QsIGh0dHBQYXRjaCwgaHR0cFBvc3QsXG4gICAgaHR0cFB1dCwgbmV4dCwgcXVlcnlQYXJhbSwgcmVxdWVzdCwgcmVxdWVzdEJvZHksXG4gICAgcmVxdWVzdEhlYWRlcnMsIHJlcXVlc3RQYXJhbSwgcmVzcG9uc2UsIFRZUEVcbn0gZnJvbSAnaW52ZXJzaWZ5LWtvYS11dGlscyc7XG5pbXBvcnQgdmFsaWRhdGUgZnJvbSAna29hLXJlcS12YWxpZGF0b3InO1xuaW1wb3J0IHsgQmFzZUNvbnN0YW50IH0gZnJvbSAnLi9jb25maWcvQmFzZUNvbnN0YW50JztcbmltcG9ydCB7IEJhc2VIdHRwU3RhdHVzQ29kZSB9IGZyb20gJy4vY29uZmlnL0Jhc2VIdHRwU3RhdHVzQ29kZSc7XG5pbXBvcnQgeyBTUUxTZXJ2ZXJUeXBlIH0gZnJvbSAnLi9jb25maWcvZW51bS5TUUxTZXJ2ZXJUeXBlJztcbmltcG9ydCBHU2VydmVyIGZyb20gJy4vR1NlcnZlcic7XG5pbXBvcnQgeyBhdXRvUHJvdmlkZSwgY29udGFpbmVyLCBpbmplY3QsIHByb3ZpZGUsIHByb3ZpZGVOYW1lZCB9IGZyb20gJy4vaW9jL2lvYyc7XG5pbXBvcnQgV2ViU29ja2V0TWFuYWdlciBmcm9tICcuL21pY3JvU2VydmljZXMvV2ViU29ja2V0TWFuYWdlcic7XG5pbXBvcnQgeyBPUk1Db250ZXh0IH0gZnJvbSAnLi9tb2RlbHMnO1xuaW1wb3J0IEFueUVudGl0eSBmcm9tICcuL21vZGVscy9BbnlFbnRpdHknO1xuaW1wb3J0IEJhc2VDb250cm9sbGVyIGZyb20gJy4vbW9kZWxzL0Jhc2VDb250cm9sbGVyJztcbmltcG9ydCBCYXNlRW50aXR5IGZyb20gJy4vbW9kZWxzL0Jhc2VFbnRpdHknO1xuaW1wb3J0IEJhc2VFeGNlcHRpb25zIGZyb20gJy4vbW9kZWxzL0Jhc2VFeGNlcHRpb25zJztcbmltcG9ydCBCYXNlUmVwb3NpdG9yeSBmcm9tICcuL21vZGVscy9CYXNlUmVwb3NpdG9yeSc7XG5pbXBvcnQgQmFzZVJlc3BvbnNlIGZyb20gJy4vbW9kZWxzL0Jhc2VSZXNwb25zZSc7XG5pbXBvcnQgQmFzZVNlcnZpY2UgZnJvbSAnLi9tb2RlbHMvQmFzZVNlcnZpY2UnO1xuaW1wb3J0IEJhc2VTb2NrZXRDb250cm9sbGVyIGZyb20gJy4vbW9kZWxzL0Jhc2VTb2NrZXRDb250cm9sbGVyJztcbmltcG9ydCBCYXNlVXNlckluZm8gZnJvbSAnLi9tb2RlbHMvQmFzZVVzZXJJbmZvJztcbmltcG9ydCBFbnRpdHkgZnJvbSAnLi9tb2RlbHMvRGVjb3JhdG9ycyc7XG5pbXBvcnQgRG9jQ2hhbmdlZCBmcm9tICcuL21vZGVscy9Eb2NDaGFuZ2VkJztcbmltcG9ydCBIdHRwSW5pdFNldHRpbmcgZnJvbSAnLi9tb2RlbHMvSHR0cEluaXRTZXR0aW5nJztcbmltcG9ydCBJQmFzZUNvbnRleHQgZnJvbSAnLi9tb2RlbHMvSUJhc2VDb250ZXh0JztcbmltcG9ydCB7IExpYnNFeGNlcHRpb25zIH0gZnJvbSAnLi9tb2RlbHMvTGlic0V4Y2VwdGlvbnMnO1xuaW1wb3J0IE5vdEltcGxlbWVudGVkIGZyb20gJy4vbW9kZWxzL05vdEltcGxlbWVudGVkJztcbmltcG9ydCBTb2NrZXRJbml0U2V0dGluZyBmcm9tICcuL21vZGVscy9Tb2NrZXRJbml0U2V0dGluZyc7XG5pbXBvcnQgVHJhbnNhY3Rpb24gZnJvbSAnLi9tb2RlbHMvVHJhbnNhY3Rpb24nO1xuaW1wb3J0IElTZXJ2ZXJJbml0T25jZUV2ZW50IGZyb20gJy4vU2VydmVyRXZlbnQvU2VydmVySW5pdE9uY2VFdmVudCc7XG5pbXBvcnQgU1NlcnZlciBmcm9tICcuL1NTZXJ2ZXInO1xuaW1wb3J0IEJhc2VEYXRhSGVscGVyIGZyb20gJy4vdXRpbHMvQmFzZURhdGFIZWxwZXInO1xuaW1wb3J0IEJhc2VTUUxIZWxwZXIgZnJvbSAnLi91dGlscy9CYXNlU1FMSGVscGVyJztcbmltcG9ydCBCYXNlVXRpbHMgZnJvbSAnLi91dGlscy9CYXNlVXRpbHMnO1xuaW1wb3J0IHsgSVF1ZXJ5T3B0aW9ucyB9IGZyb20gJy4vdXRpbHMvRGFvT3BlcmF0b3InO1xuaW1wb3J0IHsgSW5pdCwgV29ya2VyIH0gZnJvbSAnLi9XU1NlcnZlcic7XG5cbmV4cG9ydCB7XG4gICAgV29ya2VyLFxuICAgIEluaXQsXG4gICAgQ2x1c3RlcldTIGFzIFdTU2VydmVyLFxuICAgIEJhc2VTb2NrZXRDb250cm9sbGVyLFxuICAgIFdlYlNvY2tldE1hbmFnZXIsXG4gICAgSVNlcnZlckluaXRPbmNlRXZlbnQsXG4gICAgR1NlcnZlcixcbiAgICBTb2NrZXRJbml0U2V0dGluZyxcbiAgICBTU2VydmVyLFxuICAgIEh0dHBJbml0U2V0dGluZyxcbiAgICBCYXNlVXRpbHMsXG4gICAgQmFzZVNRTEhlbHBlcixcbiAgICBCYXNlRGF0YUhlbHBlcixcbiAgICBUcmFuc2FjdGlvbixcbiAgICBOb3RJbXBsZW1lbnRlZCxcbiAgICBMaWJzRXhjZXB0aW9ucyxcbiAgICBPUk1Db250ZXh0LFxuICAgIEJhc2VSZXNwb25zZSxcbiAgICBCYXNlVXNlckluZm8sXG4gICAgQmFzZVNlcnZpY2UsXG4gICAgQmFzZVJlcG9zaXRvcnksXG4gICAgQmFzZUV4Y2VwdGlvbnMsXG4gICAgQmFzZUVudGl0eSxcbiAgICBCYXNlQ29udHJvbGxlcixcbiAgICBEb2NDaGFuZ2VkLFxuICAgIEVudGl0eSxcbiAgICBBbnlFbnRpdHksXG4gICAgQmFzZUh0dHBTdGF0dXNDb2RlLFxuICAgIEJhc2VDb25zdGFudCxcbiAgICBTUUxTZXJ2ZXJUeXBlLFxuICAgIElCYXNlQ29udGV4dCxcbiAgICBJUXVlcnlPcHRpb25zLFxuICAgIGNvbnRhaW5lcixcbiAgICBhdXRvUHJvdmlkZSxcbiAgICBwcm92aWRlLFxuICAgIHByb3ZpZGVOYW1lZCxcbiAgICBpbmplY3QsXG4gICAgY29udHJvbGxlcixcbiAgICBodHRwUG9zdCxcbiAgICBodHRwUHV0LFxuICAgIFRZUEUsXG4gICAgdmFsaWRhdGUsXG4gICAgaHR0cEdldCxcbiAgICBodHRwTWV0aG9kLFxuICAgIGh0dHBQYXRjaCxcbiAgICBodHRwSGVhZCxcbiAgICBhbGwsXG4gICAgaHR0cERlbGV0ZSxcbiAgICByZXF1ZXN0LFxuICAgIHJlc3BvbnNlLFxuICAgIHJlcXVlc3RQYXJhbSxcbiAgICBxdWVyeVBhcmFtLFxuICAgIHJlcXVlc3RCb2R5LFxuICAgIHJlcXVlc3RIZWFkZXJzLFxuICAgIGNvb2tpZXMsXG4gICAgbmV4dFxufTtcbiJdfQ==