"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const clusterws_1 = require("clusterws");
const Koa = require("koa");
const jwt = require("koa-jwt");
const log4js = require("koa-log4");
const defConfig = require("./config/defconfig");
const WebSocketContext_1 = require("./models/WebSocketContext");
const log = log4js.getLogger('WSServer');
// tslint:disable-next-line:variable-name
exports.WSServer = new clusterws_1.default({
    worker: Worker,
    port: defConfig.wsPort
});
function Worker() {
    const wss = this.wss;
    const server = this.server;
    const app = new Koa();
    app.use(jwt({ secret: defConfig.jwt.privateKey, passthrough: !defConfig.jwt.active }));
    WebSocketContext_1.default.init(wss);
    server.on('request', app.callback());
    wss.on('connection', (socket) => {
        console.log('New socket is connected');
    });
    log.info('WebSocket started listening on ws://localhost:%s ...', defConfig.wsPort);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV1NTZXJ2ZXIuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJXU1NlcnZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHlDQUFrQztBQUNsQywyQkFBMkI7QUFDM0IsK0JBQStCO0FBQy9CLG1DQUFtQztBQUNuQyxnREFBZ0Q7QUFDaEQsZ0VBQXlEO0FBRXpELE1BQU0sR0FBRyxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDekMseUNBQXlDO0FBQzVCLFFBQUEsUUFBUSxHQUFHLElBQUksbUJBQVMsQ0FBQztJQUNsQyxNQUFNLEVBQUUsTUFBTTtJQUNkLElBQUksRUFBRSxTQUFTLENBQUMsTUFBTTtDQUNsQixDQUFDLENBQUM7QUFFVixTQUFTLE1BQU07SUFDWCxNQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDO0lBQ3JCLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDM0IsTUFBTSxHQUFHLEdBQUcsSUFBSSxHQUFHLEVBQUUsQ0FBQztJQUN0QixHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLE1BQU0sRUFBRSxTQUFTLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxXQUFXLEVBQUUsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQztJQUN2RiwwQkFBZ0IsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDM0IsTUFBTSxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUUsR0FBRyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7SUFDckMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxNQUFNLEVBQUUsRUFBRTtRQUM1QixPQUFPLENBQUMsR0FBRyxDQUFDLHlCQUF5QixDQUFDLENBQUM7SUFDM0MsQ0FBQyxDQUFDLENBQUM7SUFDSCxHQUFHLENBQUMsSUFBSSxDQUFDLHNEQUFzRCxFQUFFLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUN2RixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENsdXN0ZXJXUyBmcm9tICdjbHVzdGVyd3MnO1xuaW1wb3J0ICogYXMgS29hIGZyb20gJ2tvYSc7XG5pbXBvcnQgKiBhcyBqd3QgZnJvbSAna29hLWp3dCc7XG5pbXBvcnQgKiBhcyBsb2c0anMgZnJvbSAna29hLWxvZzQnO1xuaW1wb3J0ICogYXMgZGVmQ29uZmlnIGZyb20gJy4vY29uZmlnL2RlZmNvbmZpZyc7XG5pbXBvcnQgV2ViU29ja2V0Q29udGV4dCBmcm9tICcuL21vZGVscy9XZWJTb2NrZXRDb250ZXh0JztcblxuY29uc3QgbG9nID0gbG9nNGpzLmdldExvZ2dlcignV1NTZXJ2ZXInKTtcbi8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTp2YXJpYWJsZS1uYW1lXG5leHBvcnQgY29uc3QgV1NTZXJ2ZXIgPSBuZXcgQ2x1c3RlcldTKHtcbiAgICB3b3JrZXI6IFdvcmtlcixcbiAgICBwb3J0OiBkZWZDb25maWcud3NQb3J0XG59IGFzIGFueSk7XG5cbmZ1bmN0aW9uIFdvcmtlcigpIHtcbiAgICBjb25zdCB3c3MgPSB0aGlzLndzcztcbiAgICBjb25zdCBzZXJ2ZXIgPSB0aGlzLnNlcnZlcjtcbiAgICBjb25zdCBhcHAgPSBuZXcgS29hKCk7XG4gICAgYXBwLnVzZShqd3QoeyBzZWNyZXQ6IGRlZkNvbmZpZy5qd3QucHJpdmF0ZUtleSwgcGFzc3Rocm91Z2g6ICFkZWZDb25maWcuand0LmFjdGl2ZSB9KSk7XG4gICAgV2ViU29ja2V0Q29udGV4dC5pbml0KHdzcyk7XG4gICAgc2VydmVyLm9uKCdyZXF1ZXN0JywgYXBwLmNhbGxiYWNrKCkpO1xuICAgIHdzcy5vbignY29ubmVjdGlvbicsIChzb2NrZXQpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ05ldyBzb2NrZXQgaXMgY29ubmVjdGVkJyk7XG4gICAgfSk7XG4gICAgbG9nLmluZm8oJ1dlYlNvY2tldCBzdGFydGVkIGxpc3RlbmluZyBvbiB3czovL2xvY2FsaG9zdDolcyAuLi4nLCBkZWZDb25maWcud3NQb3J0KTtcbn1cbiJdfQ==