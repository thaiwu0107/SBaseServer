"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Koa = require("koa");
const jwt = require("koa-jwt");
const log4js = require("koa-log4");
const defConfig = require("./config/defconfig");
const WebSocketContext_1 = require("./models/WebSocketContext");
const log = log4js.getLogger('WSServer');
function Worker() {
    const wss = this.wss;
    const server = this.server;
    const app = new Koa();
    app.use(jwt({ secret: defConfig.jwt.privateKey, passthrough: !defConfig.jwt.active }));
    WebSocketContext_1.default.init(wss);
    server.on('request', app.callback());
    wss.on('connection', (socket) => {
        console.log('New socket is connected');
    });
    log.info('WebSocket started listening on ws://localhost:%s ...', defConfig.wsPort);
}
exports.Worker = Worker;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiV1NTZXJ2ZXIuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJXU1NlcnZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDJCQUEyQjtBQUMzQiwrQkFBK0I7QUFDL0IsbUNBQW1DO0FBQ25DLGdEQUFnRDtBQUNoRCxnRUFBeUQ7QUFFekQsTUFBTSxHQUFHLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUN6QyxTQUFnQixNQUFNO0lBQ2xCLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUM7SUFDckIsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUMzQixNQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUcsRUFBRSxDQUFDO0lBQ3RCLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsTUFBTSxFQUFFLFNBQVMsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLFdBQVcsRUFBRSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3ZGLDBCQUFnQixDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUMzQixNQUFNLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztJQUNyQyxHQUFHLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDLE1BQU0sRUFBRSxFQUFFO1FBQzVCLE9BQU8sQ0FBQyxHQUFHLENBQUMseUJBQXlCLENBQUMsQ0FBQztJQUMzQyxDQUFDLENBQUMsQ0FBQztJQUNILEdBQUcsQ0FBQyxJQUFJLENBQUMsc0RBQXNELEVBQUUsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3ZGLENBQUM7QUFYRCx3QkFXQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIEtvYSBmcm9tICdrb2EnO1xuaW1wb3J0ICogYXMgand0IGZyb20gJ2tvYS1qd3QnO1xuaW1wb3J0ICogYXMgbG9nNGpzIGZyb20gJ2tvYS1sb2c0JztcbmltcG9ydCAqIGFzIGRlZkNvbmZpZyBmcm9tICcuL2NvbmZpZy9kZWZjb25maWcnO1xuaW1wb3J0IFdlYlNvY2tldENvbnRleHQgZnJvbSAnLi9tb2RlbHMvV2ViU29ja2V0Q29udGV4dCc7XG5cbmNvbnN0IGxvZyA9IGxvZzRqcy5nZXRMb2dnZXIoJ1dTU2VydmVyJyk7XG5leHBvcnQgZnVuY3Rpb24gV29ya2VyKCkge1xuICAgIGNvbnN0IHdzcyA9IHRoaXMud3NzO1xuICAgIGNvbnN0IHNlcnZlciA9IHRoaXMuc2VydmVyO1xuICAgIGNvbnN0IGFwcCA9IG5ldyBLb2EoKTtcbiAgICBhcHAudXNlKGp3dCh7IHNlY3JldDogZGVmQ29uZmlnLmp3dC5wcml2YXRlS2V5LCBwYXNzdGhyb3VnaDogIWRlZkNvbmZpZy5qd3QuYWN0aXZlIH0pKTtcbiAgICBXZWJTb2NrZXRDb250ZXh0LmluaXQod3NzKTtcbiAgICBzZXJ2ZXIub24oJ3JlcXVlc3QnLCBhcHAuY2FsbGJhY2soKSk7XG4gICAgd3NzLm9uKCdjb25uZWN0aW9uJywgKHNvY2tldCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygnTmV3IHNvY2tldCBpcyBjb25uZWN0ZWQnKTtcbiAgICB9KTtcbiAgICBsb2cuaW5mbygnV2ViU29ja2V0IHN0YXJ0ZWQgbGlzdGVuaW5nIG9uIHdzOi8vbG9jYWxob3N0OiVzIC4uLicsIGRlZkNvbmZpZy53c1BvcnQpO1xufVxuIl19