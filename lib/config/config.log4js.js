"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
exports.default = {
    appenders: {
        out: {
            type: 'console',
            layout: {
                type: 'pattern',
                pattern: '[%d{yyyy/MM/dd hh:mm:ss.SSS}][%[%p%]] -> [%[%c%]]%n%[%m%]%n'
            }
        },
        app: {
            type: 'dateFile',
            pattern: '.yyyy-MM-dd',
            daysToKeep: 10,
            keepFileExt: true,
            filename: path.join(__dirname, '..', 'logs', 'Console.log')
        },
        request: {
            type: 'dateFile',
            pattern: '.yyyy-MM-dd',
            daysToKeep: 10,
            keepFileExt: true,
            filename: path.join(__dirname, '..', 'logs', 'Access.log')
        },
        errorFile: {
            type: 'dateFile',
            pattern: '.yyyy-MM-dd',
            daysToKeep: 10,
            keepFileExt: true,
            filename: path.join(__dirname, '..', 'logs', 'Error.log')
        },
        error: {
            type: 'logLevelFilter', appender: 'errorFile', level: 'error'
        }
    },
    categories: {
        default: { appenders: ['out', 'app', 'error'], level: 'debug' },
        request: { appenders: ['out', 'app', 'request'], level: 'info' },
        error: { appenders: ['errorFile'], level: 'error' }
    },
    replaceConsole: true
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmxvZzRqcy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImNvbmZpZy9jb25maWcubG9nNGpzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkJBQTZCO0FBRTdCLGtCQUFlO0lBQ1gsU0FBUyxFQUFFO1FBQ1AsR0FBRyxFQUFFO1lBQ0QsSUFBSSxFQUFFLFNBQVM7WUFDZixNQUFNLEVBQUU7Z0JBQ0osSUFBSSxFQUFFLFNBQVM7Z0JBQ2YsT0FBTyxFQUFFLDZEQUE2RDthQUN6RTtTQUNKO1FBQ0QsR0FBRyxFQUFFO1lBQ0QsSUFBSSxFQUFFLFVBQVU7WUFDaEIsT0FBTyxFQUFFLGFBQWE7WUFDdEIsVUFBVSxFQUFFLEVBQUU7WUFDZCxXQUFXLEVBQUUsSUFBSTtZQUNqQixRQUFRLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxhQUFhLENBQUM7U0FDOUQ7UUFDRCxPQUFPLEVBQUU7WUFDTCxJQUFJLEVBQUUsVUFBVTtZQUNoQixPQUFPLEVBQUUsYUFBYTtZQUN0QixVQUFVLEVBQUUsRUFBRTtZQUNkLFdBQVcsRUFBRSxJQUFJO1lBQ2pCLFFBQVEsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLFlBQVksQ0FBQztTQUM3RDtRQUNELFNBQVMsRUFBRTtZQUNQLElBQUksRUFBRSxVQUFVO1lBQ2hCLE9BQU8sRUFBRSxhQUFhO1lBQ3RCLFVBQVUsRUFBRSxFQUFFO1lBQ2QsV0FBVyxFQUFFLElBQUk7WUFDakIsUUFBUSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsV0FBVyxDQUFDO1NBQzVEO1FBQ0QsS0FBSyxFQUFFO1lBQ0gsSUFBSSxFQUFFLGdCQUFnQixFQUFFLFFBQVEsRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLE9BQU87U0FDaEU7S0FFSjtJQUNELFVBQVUsRUFBRTtRQUNSLE9BQU8sRUFBRSxFQUFFLFNBQVMsRUFBRSxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsT0FBTyxDQUFDLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRTtRQUMvRCxPQUFPLEVBQUUsRUFBRSxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLFNBQVMsQ0FBQyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUU7UUFDaEUsS0FBSyxFQUFFLEVBQUUsU0FBUyxFQUFFLENBQUMsV0FBVyxDQUFDLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRTtLQUV0RDtJQUNELGNBQWMsRUFBRSxJQUFJO0NBQ3ZCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgYXBwZW5kZXJzOiB7XG4gICAgICAgIG91dDoge1xuICAgICAgICAgICAgdHlwZTogJ2NvbnNvbGUnLFxuICAgICAgICAgICAgbGF5b3V0OiB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ3BhdHRlcm4nLFxuICAgICAgICAgICAgICAgIHBhdHRlcm46ICdbJWR7eXl5eS9NTS9kZCBoaDptbTpzcy5TU1N9XVslWyVwJV1dIC0+IFslWyVjJV1dJW4lWyVtJV0lbidcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgYXBwOiB7XG4gICAgICAgICAgICB0eXBlOiAnZGF0ZUZpbGUnLFxuICAgICAgICAgICAgcGF0dGVybjogJy55eXl5LU1NLWRkJyxcbiAgICAgICAgICAgIGRheXNUb0tlZXA6IDEwLFxuICAgICAgICAgICAga2VlcEZpbGVFeHQ6IHRydWUsXG4gICAgICAgICAgICBmaWxlbmFtZTogcGF0aC5qb2luKF9fZGlybmFtZSwgJy4uJywgJ2xvZ3MnLCAnQ29uc29sZS5sb2cnKVxuICAgICAgICB9LFxuICAgICAgICByZXF1ZXN0OiB7XG4gICAgICAgICAgICB0eXBlOiAnZGF0ZUZpbGUnLFxuICAgICAgICAgICAgcGF0dGVybjogJy55eXl5LU1NLWRkJyxcbiAgICAgICAgICAgIGRheXNUb0tlZXA6IDEwLFxuICAgICAgICAgICAga2VlcEZpbGVFeHQ6IHRydWUsXG4gICAgICAgICAgICBmaWxlbmFtZTogcGF0aC5qb2luKF9fZGlybmFtZSwgJy4uJywgJ2xvZ3MnLCAnQWNjZXNzLmxvZycpXG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yRmlsZToge1xuICAgICAgICAgICAgdHlwZTogJ2RhdGVGaWxlJyxcbiAgICAgICAgICAgIHBhdHRlcm46ICcueXl5eS1NTS1kZCcsXG4gICAgICAgICAgICBkYXlzVG9LZWVwOiAxMCxcbiAgICAgICAgICAgIGtlZXBGaWxlRXh0OiB0cnVlLFxuICAgICAgICAgICAgZmlsZW5hbWU6IHBhdGguam9pbihfX2Rpcm5hbWUsICcuLicsICdsb2dzJywgJ0Vycm9yLmxvZycpXG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yOiB7XG4gICAgICAgICAgICB0eXBlOiAnbG9nTGV2ZWxGaWx0ZXInLCBhcHBlbmRlcjogJ2Vycm9yRmlsZScsIGxldmVsOiAnZXJyb3InXG4gICAgICAgIH1cblxuICAgIH0sXG4gICAgY2F0ZWdvcmllczoge1xuICAgICAgICBkZWZhdWx0OiB7IGFwcGVuZGVyczogWydvdXQnLCAnYXBwJywgJ2Vycm9yJ10sIGxldmVsOiAnZGVidWcnIH0sXG4gICAgICAgIHJlcXVlc3Q6IHsgYXBwZW5kZXJzOiBbJ291dCcsICdhcHAnLCAncmVxdWVzdCddLCBsZXZlbDogJ2luZm8nIH0sXG4gICAgICAgIGVycm9yOiB7IGFwcGVuZGVyczogWydlcnJvckZpbGUnXSwgbGV2ZWw6ICdlcnJvcicgfVxuXG4gICAgfSxcbiAgICByZXBsYWNlQ29uc29sZTogdHJ1ZVxufTtcbiJdfQ==